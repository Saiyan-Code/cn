set ns [new Simulator]
set tf [open l3.tr w]
$ns trace-all $tf
set nf [open l3.nam w]
$ns namtrace-all $nf
set n0 [$ns node]
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]
set n4 [$ns node]
set n5 [$ns node]
set n6 [$ns node]
$n0 label "ping0"
$n4 label "ping4"
$n5 label "ping5"
$n6 label "ping6"
$n2 label "Router"
$ns color 1 "Red"
$ns color 2 "Green"
$ns duplex-link $n0 $n2 100Mb 300ms DropTail
$ns duplex-link $n2 $n6 1Mb 300ms DropTail
$ns duplex-link $n5 $n2 100Mb 300ms DropTail
$ns duplex-link $n2 $n4 1Mb 300ms DropTail
$ns duplex-link $n3 $n2 1Mb 300ms DropTail
$ns duplex-link $n1 $n2 1Mb 300ms DropTail
$ns queue-limit $n0 $n2 5
$ns queue-limit $n2 $n6 2
$ns queue-limit $n2 $n4 3
$ns queue-limit $n5 $n2 5

set ping0 [new Agent/Ping]
$ns attach-agent $n0 $ping0
set ping4 [new Agent/Ping]
$ns attach-agent $n4 $ping4
set ping5 [new Agent/Ping]
$ns attach-agent $n5 $ping5
set ping6 [new Agent/Ping]
$ns attach-agent $n6 $ping6

$ping0 set packetSize_ 500
$ping0 set interval_ 0.001
$ping5 set packetSize_ 600
$ping5 set interval_ 0.0001
$ping0 set class_ 1
$ping5 set class_ 2

$ns connect $ping0 $ping4
$ns connect $ping5 $ping6

Agent/Ping instproc recv {from rtt} {
    $self instvar node_
    puts "the node [$node_ id] received an reply from $from with round trip time of $rtt"
}

proc finish {} {
    global ns nf tf
    exec nam l3.nam &
    exec cat l3.nam | awk - lab3.awk &
    $ns flush-trace
    close $tf
    close $nf
    exit 0
}

$ns rtmodel-at 0.9 down $n2 $n6
$ns rtmodel-at 1.5 up $n2 $n6

for {set i 1} {$i <= 18} {incr i} {
    set time [expr $i * 0.1]
    $ns at $time "$ping0 send"
    $ns at $time "$ping5 send"
}

$ns at 5.0 "finish"
$ns run



BEGIN {
    count = 0
}
{
    if ($1 == "d")
        count++
}
END {
    printf("The total number of packets dropped due to congestion: %d\n", count)
}
